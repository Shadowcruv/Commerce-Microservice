server.port=0

#declaring the url of the server you created for the client to register
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka

###ZIPKIN
spring.zipkin.base-url=http://localhost:9411
#send 100% of the requests received on your machine to zipkin
spring.sleuth.sampler.probability=1.0
spring.sleuth.integration.enabled=true


##KAFKA Properties
#list of server where you can find kafka installation. we are using local installation so the url would be the 9092
spring.kafka.bootstrap-servers=localhost:9092
#so that you wouldn't be explicitly defining this topic every place you want to send message with kafka
spring.kafka.template.default-topic=notificationTopic
spring.kafka.consumer.group-id=notificationEventId
#serialize the key before sending   Remember this would be kakfa.consumer not producer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#serialize/convert the object to json before sending  kakfa.consumer not producer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# This property is so that spring will know how to map your object to the one in your producer.
# Thats why you are defining the fully qualified name. Note that the token name here "event" can be anything, but
# it should be the same name used in the Producer class
spring.kafka.consumer.properties.spring.json.type.mapping=event:com.notification.event.OrderPlacedEvent